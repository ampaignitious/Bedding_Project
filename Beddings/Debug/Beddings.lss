
Beddings.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800200  00000aa2  00000b36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  008002cc  008002cc  00000c02  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012ba  00000000  00000000  00000cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d28  00000000  00000000  00001faa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005bf  00000000  00000000  00002cd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00003294  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000605  00000000  00000000  00003374  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003df  00000000  00000000  00003979  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00003d58  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8c c0       	rjmp	.+280    	; 0x11e <__bad_interrupt>
   6:	00 00       	nop
   8:	8a c0       	rjmp	.+276    	; 0x11e <__bad_interrupt>
   a:	00 00       	nop
   c:	88 c0       	rjmp	.+272    	; 0x11e <__bad_interrupt>
   e:	00 00       	nop
  10:	86 c0       	rjmp	.+268    	; 0x11e <__bad_interrupt>
  12:	00 00       	nop
  14:	84 c0       	rjmp	.+264    	; 0x11e <__bad_interrupt>
  16:	00 00       	nop
  18:	82 c0       	rjmp	.+260    	; 0x11e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	80 c0       	rjmp	.+256    	; 0x11e <__bad_interrupt>
  1e:	00 00       	nop
  20:	7e c0       	rjmp	.+252    	; 0x11e <__bad_interrupt>
  22:	00 00       	nop
  24:	7c c0       	rjmp	.+248    	; 0x11e <__bad_interrupt>
  26:	00 00       	nop
  28:	7a c0       	rjmp	.+244    	; 0x11e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	78 c0       	rjmp	.+240    	; 0x11e <__bad_interrupt>
  2e:	00 00       	nop
  30:	76 c0       	rjmp	.+236    	; 0x11e <__bad_interrupt>
  32:	00 00       	nop
  34:	74 c0       	rjmp	.+232    	; 0x11e <__bad_interrupt>
  36:	00 00       	nop
  38:	72 c0       	rjmp	.+228    	; 0x11e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	70 c0       	rjmp	.+224    	; 0x11e <__bad_interrupt>
  3e:	00 00       	nop
  40:	6e c0       	rjmp	.+220    	; 0x11e <__bad_interrupt>
  42:	00 00       	nop
  44:	6c c0       	rjmp	.+216    	; 0x11e <__bad_interrupt>
  46:	00 00       	nop
  48:	6a c0       	rjmp	.+212    	; 0x11e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	68 c0       	rjmp	.+208    	; 0x11e <__bad_interrupt>
  4e:	00 00       	nop
  50:	66 c0       	rjmp	.+204    	; 0x11e <__bad_interrupt>
  52:	00 00       	nop
  54:	64 c0       	rjmp	.+200    	; 0x11e <__bad_interrupt>
  56:	00 00       	nop
  58:	62 c0       	rjmp	.+196    	; 0x11e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	60 c0       	rjmp	.+192    	; 0x11e <__bad_interrupt>
  5e:	00 00       	nop
  60:	5e c0       	rjmp	.+188    	; 0x11e <__bad_interrupt>
  62:	00 00       	nop
  64:	5c c0       	rjmp	.+184    	; 0x11e <__bad_interrupt>
  66:	00 00       	nop
  68:	5a c0       	rjmp	.+180    	; 0x11e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	58 c0       	rjmp	.+176    	; 0x11e <__bad_interrupt>
  6e:	00 00       	nop
  70:	56 c0       	rjmp	.+172    	; 0x11e <__bad_interrupt>
  72:	00 00       	nop
  74:	54 c0       	rjmp	.+168    	; 0x11e <__bad_interrupt>
  76:	00 00       	nop
  78:	52 c0       	rjmp	.+164    	; 0x11e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	50 c0       	rjmp	.+160    	; 0x11e <__bad_interrupt>
  7e:	00 00       	nop
  80:	4e c0       	rjmp	.+156    	; 0x11e <__bad_interrupt>
  82:	00 00       	nop
  84:	4c c0       	rjmp	.+152    	; 0x11e <__bad_interrupt>
  86:	00 00       	nop
  88:	4a c0       	rjmp	.+148    	; 0x11e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	48 c0       	rjmp	.+144    	; 0x11e <__bad_interrupt>
  8e:	00 00       	nop
  90:	46 c0       	rjmp	.+140    	; 0x11e <__bad_interrupt>
  92:	00 00       	nop
  94:	44 c0       	rjmp	.+136    	; 0x11e <__bad_interrupt>
  96:	00 00       	nop
  98:	42 c0       	rjmp	.+132    	; 0x11e <__bad_interrupt>
  9a:	00 00       	nop
  9c:	40 c0       	rjmp	.+128    	; 0x11e <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3e c0       	rjmp	.+124    	; 0x11e <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3c c0       	rjmp	.+120    	; 0x11e <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3a c0       	rjmp	.+116    	; 0x11e <__bad_interrupt>
  aa:	00 00       	nop
  ac:	38 c0       	rjmp	.+112    	; 0x11e <__bad_interrupt>
  ae:	00 00       	nop
  b0:	36 c0       	rjmp	.+108    	; 0x11e <__bad_interrupt>
  b2:	00 00       	nop
  b4:	34 c0       	rjmp	.+104    	; 0x11e <__bad_interrupt>
  b6:	00 00       	nop
  b8:	32 c0       	rjmp	.+100    	; 0x11e <__bad_interrupt>
  ba:	00 00       	nop
  bc:	30 c0       	rjmp	.+96     	; 0x11e <__bad_interrupt>
  be:	00 00       	nop
  c0:	2e c0       	rjmp	.+92     	; 0x11e <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2c c0       	rjmp	.+88     	; 0x11e <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2a c0       	rjmp	.+84     	; 0x11e <__bad_interrupt>
  ca:	00 00       	nop
  cc:	28 c0       	rjmp	.+80     	; 0x11e <__bad_interrupt>
  ce:	00 00       	nop
  d0:	26 c0       	rjmp	.+76     	; 0x11e <__bad_interrupt>
  d2:	00 00       	nop
  d4:	24 c0       	rjmp	.+72     	; 0x11e <__bad_interrupt>
  d6:	00 00       	nop
  d8:	22 c0       	rjmp	.+68     	; 0x11e <__bad_interrupt>
  da:	00 00       	nop
  dc:	20 c0       	rjmp	.+64     	; 0x11e <__bad_interrupt>
  de:	00 00       	nop
  e0:	1e c0       	rjmp	.+60     	; 0x11e <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	12 e0       	ldi	r17, 0x02	; 2
  f2:	a0 e0       	ldi	r26, 0x00	; 0
  f4:	b2 e0       	ldi	r27, 0x02	; 2
  f6:	e2 ea       	ldi	r30, 0xA2	; 162
  f8:	fa e0       	ldi	r31, 0x0A	; 10
  fa:	00 e0       	ldi	r16, 0x00	; 0
  fc:	0b bf       	out	0x3b, r16	; 59
  fe:	02 c0       	rjmp	.+4      	; 0x104 <__do_copy_data+0x14>
 100:	07 90       	elpm	r0, Z+
 102:	0d 92       	st	X+, r0
 104:	ac 3c       	cpi	r26, 0xCC	; 204
 106:	b1 07       	cpc	r27, r17
 108:	d9 f7       	brne	.-10     	; 0x100 <__do_copy_data+0x10>

0000010a <__do_clear_bss>:
 10a:	22 e0       	ldi	r18, 0x02	; 2
 10c:	ac ec       	ldi	r26, 0xCC	; 204
 10e:	b2 e0       	ldi	r27, 0x02	; 2
 110:	01 c0       	rjmp	.+2      	; 0x114 <.do_clear_bss_start>

00000112 <.do_clear_bss_loop>:
 112:	1d 92       	st	X+, r1

00000114 <.do_clear_bss_start>:
 114:	a0 3e       	cpi	r26, 0xE0	; 224
 116:	b2 07       	cpc	r27, r18
 118:	e1 f7       	brne	.-8      	; 0x112 <.do_clear_bss_loop>
 11a:	a4 d1       	rcall	.+840    	; 0x464 <main>
 11c:	c0 c4       	rjmp	.+2432   	; 0xa9e <_exit>

0000011e <__bad_interrupt>:
 11e:	70 cf       	rjmp	.-288    	; 0x0 <__vectors>

00000120 <enable>:
int chosen_size = -1;
int chosen_time =-1;


void enable(){
	PORTG |= (1<<5); //en - give a 1
 120:	84 b3       	in	r24, 0x14	; 20
 122:	80 62       	ori	r24, 0x20	; 32
 124:	84 bb       	out	0x14, r24	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 126:	83 ec       	ldi	r24, 0xC3	; 195
 128:	99 e0       	ldi	r25, 0x09	; 9
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <enable+0xa>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <enable+0x10>
 130:	00 00       	nop
	_delay_ms(10);
	PORTG &= ~(1<<5); //en - give a 0
 132:	84 b3       	in	r24, 0x14	; 20
 134:	8f 7d       	andi	r24, 0xDF	; 223
 136:	84 bb       	out	0x14, r24	; 20
 138:	83 ec       	ldi	r24, 0xC3	; 195
 13a:	99 e0       	ldi	r25, 0x09	; 9
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <enable+0x1c>
 140:	00 c0       	rjmp	.+0      	; 0x142 <enable+0x22>
 142:	00 00       	nop
 144:	08 95       	ret

00000146 <start_lcd>:
	_delay_ms(10);
}

void start_lcd(){
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
	PORTG &= ~(1<<4); // r/w - writing
 14a:	84 b3       	in	r24, 0x14	; 20
 14c:	8f 7e       	andi	r24, 0xEF	; 239
 14e:	84 bb       	out	0x14, r24	; 20
	PORTG &= ~(1<<3); //rs - command mode
 150:	84 b3       	in	r24, 0x14	; 20
 152:	87 7f       	andi	r24, 0xF7	; 247
 154:	84 bb       	out	0x14, r24	; 20
	
	PORTH = 0x38; // set 8 data lines 0011 1111
 156:	c2 e0       	ldi	r28, 0x02	; 2
 158:	d1 e0       	ldi	r29, 0x01	; 1
 15a:	88 e3       	ldi	r24, 0x38	; 56
 15c:	88 83       	st	Y, r24
	enable();
 15e:	e0 df       	rcall	.-64     	; 0x120 <enable>
	
	PORTH = 0x0f; // blink 0000 1111
 160:	8f e0       	ldi	r24, 0x0F	; 15
	enable();
 162:	88 83       	st	Y, r24
 164:	dd df       	rcall	.-70     	; 0x120 <enable>
	
	PORTH = 0x10; // display 0001 1100
 166:	80 e1       	ldi	r24, 0x10	; 16
	enable();
 168:	88 83       	st	Y, r24
 16a:	da df       	rcall	.-76     	; 0x120 <enable>
}
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <print>:

void print(char word[20],int row){
 172:	ef 92       	push	r14
 174:	ff 92       	push	r15
 176:	0f 93       	push	r16
 178:	1f 93       	push	r17
 17a:	cf 93       	push	r28
 17c:	df 93       	push	r29
 17e:	cd b7       	in	r28, 0x3d	; 61
 180:	de b7       	in	r29, 0x3e	; 62
 182:	28 97       	sbiw	r28, 0x08	; 8
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	7c 01       	movw	r14, r24
 190:	8b 01       	movw	r16, r22
	PORTG &= ~(1<<3); //rs - command mode
 192:	84 b3       	in	r24, 0x14	; 20
 194:	87 7f       	andi	r24, 0xF7	; 247
 196:	84 bb       	out	0x14, r24	; 20
	enable();
 198:	c3 df       	rcall	.-122    	; 0x120 <enable>
	int positions[] = {0x80,0xc0,0x94,0xd4};
 19a:	88 e0       	ldi	r24, 0x08	; 8
 19c:	ea e0       	ldi	r30, 0x0A	; 10
 19e:	f2 e0       	ldi	r31, 0x02	; 2
 1a0:	de 01       	movw	r26, r28
 1a2:	11 96       	adiw	r26, 0x01	; 1
 1a4:	01 90       	ld	r0, Z+
 1a6:	0d 92       	st	X+, r0
 1a8:	8a 95       	dec	r24
 1aa:	e1 f7       	brne	.-8      	; 0x1a4 <print+0x32>
	PORTH = positions[row]; // set print out 1001 0010
 1ac:	00 0f       	add	r16, r16
 1ae:	11 1f       	adc	r17, r17
 1b0:	e1 e0       	ldi	r30, 0x01	; 1
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	ec 0f       	add	r30, r28
 1b6:	fd 1f       	adc	r31, r29
 1b8:	e0 0f       	add	r30, r16
 1ba:	f1 1f       	adc	r31, r17
 1bc:	80 81       	ld	r24, Z
 1be:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
	enable();
 1c2:	ae df       	rcall	.-164    	; 0x120 <enable>
	
	//switch to data mode
	PORTG |= (1<<3);
 1c4:	84 b3       	in	r24, 0x14	; 20
 1c6:	88 60       	ori	r24, 0x08	; 8
	enable();
 1c8:	84 bb       	out	0x14, r24	; 20
 1ca:	aa df       	rcall	.-172    	; 0x120 <enable>
	for(int i=0; i<strlen(word); i++){
 1cc:	00 e0       	ldi	r16, 0x00	; 0
 1ce:	10 e0       	ldi	r17, 0x00	; 0
 1d0:	09 c0       	rjmp	.+18     	; 0x1e4 <print+0x72>
		PORTH = word[i];
 1d2:	f7 01       	movw	r30, r14
 1d4:	e0 0f       	add	r30, r16
 1d6:	f1 1f       	adc	r31, r17
 1d8:	80 81       	ld	r24, Z
 1da:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
		enable();
 1de:	a0 df       	rcall	.-192    	; 0x120 <enable>
	enable();
	
	//switch to data mode
	PORTG |= (1<<3);
	enable();
	for(int i=0; i<strlen(word); i++){
 1e0:	0f 5f       	subi	r16, 0xFF	; 255
 1e2:	1f 4f       	sbci	r17, 0xFF	; 255
 1e4:	f7 01       	movw	r30, r14
 1e6:	01 90       	ld	r0, Z+
 1e8:	00 20       	and	r0, r0
 1ea:	e9 f7       	brne	.-6      	; 0x1e6 <print+0x74>
 1ec:	31 97       	sbiw	r30, 0x01	; 1
 1ee:	ee 19       	sub	r30, r14
 1f0:	ff 09       	sbc	r31, r15
 1f2:	0e 17       	cp	r16, r30
 1f4:	1f 07       	cpc	r17, r31
 1f6:	68 f3       	brcs	.-38     	; 0x1d2 <print+0x60>
		PORTH = word[i];
		enable();
	}
}
 1f8:	28 96       	adiw	r28, 0x08	; 8
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	f8 94       	cli
 1fe:	de bf       	out	0x3e, r29	; 62
 200:	0f be       	out	0x3f, r0	; 63
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	1f 91       	pop	r17
 20a:	0f 91       	pop	r16
 20c:	ff 90       	pop	r15
 20e:	ef 90       	pop	r14
 210:	08 95       	ret

00000212 <clear>:

void clear(){
	PORTG &= ~(1<<3); //rs - command mode
 212:	84 b3       	in	r24, 0x14	; 20
 214:	87 7f       	andi	r24, 0xF7	; 247
 216:	84 bb       	out	0x14, r24	; 20
	enable();
 218:	83 df       	rcall	.-250    	; 0x120 <enable>
	PORTH = 0x01;
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
	enable();
 220:	7f cf       	rjmp	.-258    	; 0x120 <enable>
 222:	08 95       	ret

00000224 <choose>:
}

char* choose(){
 224:	cf 93       	push	r28
 226:	df 93       	push	r29
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
 22c:	2d 97       	sbiw	r28, 0x0d	; 13
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	f8 94       	cli
 232:	de bf       	out	0x3e, r29	; 62
 234:	0f be       	out	0x3f, r0	; 63
 236:	cd bf       	out	0x3d, r28	; 61
	strcpy(input,"");
 238:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <__data_end>
	DDRJ = 0xf8;
 23c:	88 ef       	ldi	r24, 0xF8	; 248
 23e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7e0104>
	char selections[4][3] = {{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};
 242:	8c e0       	ldi	r24, 0x0C	; 12
 244:	e2 e1       	ldi	r30, 0x12	; 18
 246:	f2 e0       	ldi	r31, 0x02	; 2
 248:	de 01       	movw	r26, r28
 24a:	11 96       	adiw	r26, 0x01	; 1
 24c:	01 90       	ld	r0, Z+
 24e:	0d 92       	st	X+, r0
 250:	8a 95       	dec	r24
 252:	e1 f7       	brne	.-8      	; 0x24c <choose+0x28>
	
	/* Replace with your application code */
	while (1) {
		char choice = '*';
 254:	8a e2       	ldi	r24, 0x2A	; 42
 256:	8d 87       	std	Y+13, r24	; 0x0d
		int choice_set = 0;
		for (int i=3; i<=6; i++){
 258:	43 e0       	ldi	r20, 0x03	; 3
 25a:	50 e0       	ldi	r21, 0x00	; 0
	char selections[4][3] = {{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};
	
	/* Replace with your application code */
	while (1) {
		char choice = '*';
		int choice_set = 0;
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
		for (int i=3; i<=6; i++){
 260:	42 c0       	rjmp	.+132    	; 0x2e6 <choose+0xc2>
			PORTJ = ~(1<<i);
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	04 2e       	mov	r0, r20
 268:	02 c0       	rjmp	.+4      	; 0x26e <choose+0x4a>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	0a 94       	dec	r0
 270:	e2 f7       	brpl	.-8      	; 0x26a <choose+0x46>
 272:	80 95       	com	r24
 274:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <__TEXT_REGION_LENGTH__+0x7e0105>
			if((PINJ&(1<<2))==0)
 278:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__TEXT_REGION_LENGTH__+0x7e0103>
 27c:	82 fd       	sbrc	r24, 2
 27e:	0d c0       	rjmp	.+26     	; 0x29a <choose+0x76>
			choice = selections[choice_set][0];
 280:	f9 01       	movw	r30, r18
 282:	ee 0f       	add	r30, r30
 284:	ff 1f       	adc	r31, r31
 286:	e2 0f       	add	r30, r18
 288:	f3 1f       	adc	r31, r19
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	8c 0f       	add	r24, r28
 290:	9d 1f       	adc	r25, r29
 292:	e8 0f       	add	r30, r24
 294:	f9 1f       	adc	r31, r25
 296:	80 81       	ld	r24, Z
 298:	8d 87       	std	Y+13, r24	; 0x0d
			if((PINJ&(1<<1))==0)
 29a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__TEXT_REGION_LENGTH__+0x7e0103>
 29e:	81 fd       	sbrc	r24, 1
 2a0:	0d c0       	rjmp	.+26     	; 0x2bc <choose+0x98>
			choice = selections[choice_set][1];
 2a2:	f9 01       	movw	r30, r18
 2a4:	ee 0f       	add	r30, r30
 2a6:	ff 1f       	adc	r31, r31
 2a8:	e2 0f       	add	r30, r18
 2aa:	f3 1f       	adc	r31, r19
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	8c 0f       	add	r24, r28
 2b2:	9d 1f       	adc	r25, r29
 2b4:	e8 0f       	add	r30, r24
 2b6:	f9 1f       	adc	r31, r25
 2b8:	81 81       	ldd	r24, Z+1	; 0x01
 2ba:	8d 87       	std	Y+13, r24	; 0x0d
			if((PINJ&(1<<0))==0)
 2bc:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__TEXT_REGION_LENGTH__+0x7e0103>
 2c0:	80 fd       	sbrc	r24, 0
 2c2:	0d c0       	rjmp	.+26     	; 0x2de <choose+0xba>
			choice = selections[choice_set][2];
 2c4:	f9 01       	movw	r30, r18
 2c6:	ee 0f       	add	r30, r30
 2c8:	ff 1f       	adc	r31, r31
 2ca:	e2 0f       	add	r30, r18
 2cc:	f3 1f       	adc	r31, r19
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	8c 0f       	add	r24, r28
 2d4:	9d 1f       	adc	r25, r29
 2d6:	e8 0f       	add	r30, r24
 2d8:	f9 1f       	adc	r31, r25
 2da:	82 81       	ldd	r24, Z+2	; 0x02
 2dc:	8d 87       	std	Y+13, r24	; 0x0d
			choice_set++;
 2de:	2f 5f       	subi	r18, 0xFF	; 255
 2e0:	3f 4f       	sbci	r19, 0xFF	; 255
	
	/* Replace with your application code */
	while (1) {
		char choice = '*';
		int choice_set = 0;
		for (int i=3; i<=6; i++){
 2e2:	4f 5f       	subi	r20, 0xFF	; 255
 2e4:	5f 4f       	sbci	r21, 0xFF	; 255
 2e6:	47 30       	cpi	r20, 0x07	; 7
 2e8:	51 05       	cpc	r21, r1
 2ea:	0c f4       	brge	.+2      	; 0x2ee <choose+0xca>
 2ec:	ba cf       	rjmp	.-140    	; 0x262 <choose+0x3e>
			if((PINJ&(1<<0))==0)
			choice = selections[choice_set][2];
			choice_set++;
		}
		
		if (choice=='#')
 2ee:	8d 85       	ldd	r24, Y+13	; 0x0d
 2f0:	83 32       	cpi	r24, 0x23	; 35
 2f2:	a9 f0       	breq	.+42     	; 0x31e <choose+0xfa>
			break;
		else if (choice=='*')
 2f4:	8a 32       	cpi	r24, 0x2A	; 42
 2f6:	09 f4       	brne	.+2      	; 0x2fa <choose+0xd6>
 2f8:	ad cf       	rjmp	.-166    	; 0x254 <choose+0x30>
			continue;
		else{
			strncat(input, &choice, 1);
 2fa:	41 e0       	ldi	r20, 0x01	; 1
 2fc:	50 e0       	ldi	r21, 0x00	; 0
 2fe:	be 01       	movw	r22, r28
 300:	63 5f       	subi	r22, 0xF3	; 243
 302:	7f 4f       	sbci	r23, 0xFF	; 255
 304:	8c ec       	ldi	r24, 0xCC	; 204
 306:	92 e0       	ldi	r25, 0x02	; 2
 308:	d7 d0       	rcall	.+430    	; 0x4b8 <strncat>
 30a:	9f e9       	ldi	r25, 0x9F	; 159
 30c:	26 e8       	ldi	r18, 0x86	; 134
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	91 50       	subi	r25, 0x01	; 1
 312:	20 40       	sbci	r18, 0x00	; 0
 314:	80 40       	sbci	r24, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <choose+0xec>
 318:	00 c0       	rjmp	.+0      	; 0x31a <choose+0xf6>
 31a:	00 00       	nop
 31c:	9b cf       	rjmp	.-202    	; 0x254 <choose+0x30>
			_delay_ms(500);
		}
	}
	return input;
}
 31e:	8c ec       	ldi	r24, 0xCC	; 204
 320:	92 e0       	ldi	r25, 0x02	; 2
 322:	2d 96       	adiw	r28, 0x0d	; 13
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	de bf       	out	0x3e, r29	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	cd bf       	out	0x3d, r28	; 61
 32e:	df 91       	pop	r29
 330:	cf 91       	pop	r28
 332:	08 95       	ret

00000334 <config>:

void config(){
 334:	0f 93       	push	r16
 336:	1f 93       	push	r17
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	00 d0       	rcall	.+0      	; 0x33e <config+0xa>
 33e:	00 d0       	rcall	.+0      	; 0x340 <config+0xc>
 340:	00 d0       	rcall	.+0      	; 0x342 <config+0xe>
 342:	cd b7       	in	r28, 0x3d	; 61
 344:	de b7       	in	r29, 0x3e	; 62
	print("WELCOME TO", 0);
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	8e e1       	ldi	r24, 0x1E	; 30
 34c:	92 e0       	ldi	r25, 0x02	; 2
 34e:	11 df       	rcall	.-478    	; 0x172 <print>
	print("COMFORTABLE BEDDING",1);
 350:	61 e0       	ldi	r22, 0x01	; 1
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	89 e2       	ldi	r24, 0x29	; 41
 356:	92 e0       	ldi	r25, 0x02	; 2
 358:	0c df       	rcall	.-488    	; 0x172 <print>
	print("SYSTEM",2);
 35a:	62 e0       	ldi	r22, 0x02	; 2
 35c:	70 e0       	ldi	r23, 0x00	; 0
 35e:	8d e3       	ldi	r24, 0x3D	; 61
 360:	92 e0       	ldi	r25, 0x02	; 2
 362:	07 df       	rcall	.-498    	; 0x172 <print>
 364:	2f e3       	ldi	r18, 0x3F	; 63
 366:	8d e0       	ldi	r24, 0x0D	; 13
 368:	93 e0       	ldi	r25, 0x03	; 3
 36a:	21 50       	subi	r18, 0x01	; 1
 36c:	80 40       	sbci	r24, 0x00	; 0
 36e:	90 40       	sbci	r25, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <config+0x36>
	_delay_ms(1000);
	clear();
 372:	00 c0       	rjmp	.+0      	; 0x374 <config+0x40>
 374:	00 00       	nop
	start_lcd();
 376:	4d df       	rcall	.-358    	; 0x212 <clear>
	
	print("SET CONFIGURATION",0);
 378:	e6 de       	rcall	.-564    	; 0x146 <start_lcd>
 37a:	60 e0       	ldi	r22, 0x00	; 0
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	84 e4       	ldi	r24, 0x44	; 68
 380:	92 e0       	ldi	r25, 0x02	; 2
	print("ENTER MATTRESS_TYPE",1);
 382:	f7 de       	rcall	.-530    	; 0x172 <print>
 384:	61 e0       	ldi	r22, 0x01	; 1
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	86 e5       	ldi	r24, 0x56	; 86
 38a:	92 e0       	ldi	r25, 0x02	; 2
 38c:	f2 de       	rcall	.-540    	; 0x172 <print>
 38e:	2f e3       	ldi	r18, 0x3F	; 63
 390:	8d e0       	ldi	r24, 0x0D	; 13
 392:	93 e0       	ldi	r25, 0x03	; 3
 394:	21 50       	subi	r18, 0x01	; 1
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	90 40       	sbci	r25, 0x00	; 0
 39a:	e1 f7       	brne	.-8      	; 0x394 <config+0x60>
	//print("2.TIME",2);
	//print("3.TOTAL_NO.",3);
	_delay_ms(1000);
	
	clear();
 39c:	00 c0       	rjmp	.+0      	; 0x39e <config+0x6a>
 39e:	00 00       	nop
	start_lcd();
 3a0:	38 df       	rcall	.-400    	; 0x212 <clear>
 3a2:	d1 de       	rcall	.-606    	; 0x146 <start_lcd>
	print("1.SMALL",0);
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	8a e6       	ldi	r24, 0x6A	; 106
 3aa:	92 e0       	ldi	r25, 0x02	; 2
 3ac:	e2 de       	rcall	.-572    	; 0x172 <print>
	print("2.MEDIUM",1);
 3ae:	61 e0       	ldi	r22, 0x01	; 1
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	82 e7       	ldi	r24, 0x72	; 114
 3b4:	92 e0       	ldi	r25, 0x02	; 2
	print("3.LARGE",2);
 3b6:	dd de       	rcall	.-582    	; 0x172 <print>
 3b8:	62 e0       	ldi	r22, 0x02	; 2
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	8b e7       	ldi	r24, 0x7B	; 123
 3be:	92 e0       	ldi	r25, 0x02	; 2
	char* z =choose();
 3c0:	d8 de       	rcall	.-592    	; 0x172 <print>
 3c2:	30 df       	rcall	.-416    	; 0x224 <choose>
	chosen_size = atoi(z);
 3c4:	5c d0       	rcall	.+184    	; 0x47e <atoi>
 3c6:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <chosen_size+0x1>
 3ca:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <chosen_size>
 3ce:	21 df       	rcall	.-446    	; 0x212 <clear>
	clear();
 3d0:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <chosen_size>
	print(size[chosen_size-1], 0);
 3d4:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <chosen_size+0x1>
 3d8:	31 97       	sbiw	r30, 0x01	; 1
 3da:	ee 0f       	add	r30, r30
 3dc:	ff 1f       	adc	r31, r31
 3de:	ec 5f       	subi	r30, 0xFC	; 252
 3e0:	fd 4f       	sbci	r31, 0xFD	; 253
 3e2:	60 e0       	ldi	r22, 0x00	; 0
 3e4:	70 e0       	ldi	r23, 0x00	; 0
 3e6:	80 81       	ld	r24, Z
 3e8:	91 81       	ldd	r25, Z+1	; 0x01
 3ea:	c3 de       	rcall	.-634    	; 0x172 <print>
	print("ENTER TIME FOR", 1);
 3ec:	61 e0       	ldi	r22, 0x01	; 1
 3ee:	70 e0       	ldi	r23, 0x00	; 0
 3f0:	83 e8       	ldi	r24, 0x83	; 131
 3f2:	92 e0       	ldi	r25, 0x02	; 2
 3f4:	be de       	rcall	.-644    	; 0x172 <print>
	print("SELECTED", 2);
 3f6:	62 e0       	ldi	r22, 0x02	; 2
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	82 e9       	ldi	r24, 0x92	; 146
 3fc:	92 e0       	ldi	r25, 0x02	; 2
 3fe:	b9 de       	rcall	.-654    	; 0x172 <print>
	print("MATTRESS: ",3);
 400:	63 e0       	ldi	r22, 0x03	; 3
 402:	70 e0       	ldi	r23, 0x00	; 0
 404:	8b e9       	ldi	r24, 0x9B	; 155
 406:	92 e0       	ldi	r25, 0x02	; 2
 408:	b4 de       	rcall	.-664    	; 0x172 <print>
 40a:	0c df       	rcall	.-488    	; 0x224 <choose>
	 char *t = choose();
 40c:	38 d0       	rcall	.+112    	; 0x47e <atoi>
 40e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
	 chosen_time = atoi(t);
 412:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 416:	fd de       	rcall	.-518    	; 0x212 <clear>
 418:	96 de       	rcall	.-724    	; 0x146 <start_lcd>
	 clear();
 41a:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
	 start_lcd();
 41e:	8f 93       	push	r24
	 
	 char str[6];
	 sprintf(str, "%d", chosen_time);
 420:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 424:	8f 93       	push	r24
 426:	86 ea       	ldi	r24, 0xA6	; 166
 428:	92 e0       	ldi	r25, 0x02	; 2
 42a:	9f 93       	push	r25
 42c:	8f 93       	push	r24
 42e:	8e 01       	movw	r16, r28
 430:	0f 5f       	subi	r16, 0xFF	; 255
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	1f 93       	push	r17
 436:	0f 93       	push	r16
 438:	57 d0       	rcall	.+174    	; 0x4e8 <sprintf>
 43a:	61 e0       	ldi	r22, 0x01	; 1
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	c8 01       	movw	r24, r16
 440:	98 de       	rcall	.-720    	; 0x172 <print>
	 
	 //print("Time entered: ",0);
	 print(str, 1);
 442:	0f 90       	pop	r0
 444:	0f 90       	pop	r0
 446:	0f 90       	pop	r0
 448:	0f 90       	pop	r0
 44a:	0f 90       	pop	r0
		//print("ENTER TIME: ",0);
	//}
	//if(p==3){
		//print("ENTER TOTAL MATRESS:", 0);
	//}
}
 44c:	0f 90       	pop	r0
 44e:	26 96       	adiw	r28, 0x06	; 6
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	f8 94       	cli
 454:	de bf       	out	0x3e, r29	; 62
 456:	0f be       	out	0x3f, r0	; 63
 458:	cd bf       	out	0x3d, r28	; 61
 45a:	df 91       	pop	r29
 45c:	cf 91       	pop	r28
 45e:	1f 91       	pop	r17
 460:	0f 91       	pop	r16
 462:	08 95       	ret

00000464 <main>:
 464:	8f ef       	ldi	r24, 0xFF	; 255
 466:	87 b9       	out	0x07, r24	; 7
 468:	1a b8       	out	0x0a, r1	; 10
 46a:	83 bb       	out	0x13, r24	; 19
 46c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7e0101>
    /* Replace with your application code */
	DDRC = 0xff;
	DDRD = 0x00;
	DDRG = 0xff;
	DDRH = 0xff;
	DDRK = 0xff;
 470:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__TEXT_REGION_LENGTH__+0x7e0107>
	DDRJ = 0x00;
 474:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__TEXT_REGION_LENGTH__+0x7e0104>
	
	start_lcd();
 478:	66 de       	rcall	.-820    	; 0x146 <start_lcd>
	config();
 47a:	5c df       	rcall	.-328    	; 0x334 <config>
 47c:	ff cf       	rjmp	.-2      	; 0x47c <main+0x18>

0000047e <atoi>:
 47e:	fc 01       	movw	r30, r24
 480:	88 27       	eor	r24, r24
 482:	99 27       	eor	r25, r25
 484:	e8 94       	clt
 486:	21 91       	ld	r18, Z+
 488:	20 32       	cpi	r18, 0x20	; 32
 48a:	e9 f3       	breq	.-6      	; 0x486 <atoi+0x8>
 48c:	29 30       	cpi	r18, 0x09	; 9
 48e:	10 f0       	brcs	.+4      	; 0x494 <atoi+0x16>
 490:	2e 30       	cpi	r18, 0x0E	; 14
 492:	c8 f3       	brcs	.-14     	; 0x486 <atoi+0x8>
 494:	2b 32       	cpi	r18, 0x2B	; 43
 496:	39 f0       	breq	.+14     	; 0x4a6 <atoi+0x28>
 498:	2d 32       	cpi	r18, 0x2D	; 45
 49a:	31 f4       	brne	.+12     	; 0x4a8 <atoi+0x2a>
 49c:	68 94       	set
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <atoi+0x28>
 4a0:	1b d0       	rcall	.+54     	; 0x4d8 <__mulhi_const_10>
 4a2:	82 0f       	add	r24, r18
 4a4:	91 1d       	adc	r25, r1
 4a6:	21 91       	ld	r18, Z+
 4a8:	20 53       	subi	r18, 0x30	; 48
 4aa:	2a 30       	cpi	r18, 0x0A	; 10
 4ac:	c8 f3       	brcs	.-14     	; 0x4a0 <atoi+0x22>
 4ae:	1e f4       	brtc	.+6      	; 0x4b6 <atoi+0x38>
 4b0:	90 95       	com	r25
 4b2:	81 95       	neg	r24
 4b4:	9f 4f       	sbci	r25, 0xFF	; 255
 4b6:	08 95       	ret

000004b8 <strncat>:
 4b8:	fb 01       	movw	r30, r22
 4ba:	dc 01       	movw	r26, r24
 4bc:	0d 90       	ld	r0, X+
 4be:	00 20       	and	r0, r0
 4c0:	e9 f7       	brne	.-6      	; 0x4bc <strncat+0x4>
 4c2:	11 97       	sbiw	r26, 0x01	; 1
 4c4:	41 50       	subi	r20, 0x01	; 1
 4c6:	50 40       	sbci	r21, 0x00	; 0
 4c8:	28 f0       	brcs	.+10     	; 0x4d4 <strncat+0x1c>
 4ca:	01 90       	ld	r0, Z+
 4cc:	00 20       	and	r0, r0
 4ce:	0d 92       	st	X+, r0
 4d0:	c9 f7       	brne	.-14     	; 0x4c4 <strncat+0xc>
 4d2:	08 95       	ret
 4d4:	1c 92       	st	X, r1
 4d6:	08 95       	ret

000004d8 <__mulhi_const_10>:
 4d8:	7a e0       	ldi	r23, 0x0A	; 10
 4da:	97 9f       	mul	r25, r23
 4dc:	90 2d       	mov	r25, r0
 4de:	87 9f       	mul	r24, r23
 4e0:	80 2d       	mov	r24, r0
 4e2:	91 0d       	add	r25, r1
 4e4:	11 24       	eor	r1, r1
 4e6:	08 95       	ret

000004e8 <sprintf>:
 4e8:	0f 93       	push	r16
 4ea:	1f 93       	push	r17
 4ec:	cf 93       	push	r28
 4ee:	df 93       	push	r29
 4f0:	cd b7       	in	r28, 0x3d	; 61
 4f2:	de b7       	in	r29, 0x3e	; 62
 4f4:	2e 97       	sbiw	r28, 0x0e	; 14
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	f8 94       	cli
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	cd bf       	out	0x3d, r28	; 61
 500:	0d 89       	ldd	r16, Y+21	; 0x15
 502:	1e 89       	ldd	r17, Y+22	; 0x16
 504:	86 e0       	ldi	r24, 0x06	; 6
 506:	8c 83       	std	Y+4, r24	; 0x04
 508:	1a 83       	std	Y+2, r17	; 0x02
 50a:	09 83       	std	Y+1, r16	; 0x01
 50c:	8f ef       	ldi	r24, 0xFF	; 255
 50e:	9f e7       	ldi	r25, 0x7F	; 127
 510:	9e 83       	std	Y+6, r25	; 0x06
 512:	8d 83       	std	Y+5, r24	; 0x05
 514:	ae 01       	movw	r20, r28
 516:	47 5e       	subi	r20, 0xE7	; 231
 518:	5f 4f       	sbci	r21, 0xFF	; 255
 51a:	6f 89       	ldd	r22, Y+23	; 0x17
 51c:	78 8d       	ldd	r23, Y+24	; 0x18
 51e:	ce 01       	movw	r24, r28
 520:	01 96       	adiw	r24, 0x01	; 1
 522:	10 d0       	rcall	.+32     	; 0x544 <vfprintf>
 524:	ef 81       	ldd	r30, Y+7	; 0x07
 526:	f8 85       	ldd	r31, Y+8	; 0x08
 528:	e0 0f       	add	r30, r16
 52a:	f1 1f       	adc	r31, r17
 52c:	10 82       	st	Z, r1
 52e:	2e 96       	adiw	r28, 0x0e	; 14
 530:	0f b6       	in	r0, 0x3f	; 63
 532:	f8 94       	cli
 534:	de bf       	out	0x3e, r29	; 62
 536:	0f be       	out	0x3f, r0	; 63
 538:	cd bf       	out	0x3d, r28	; 61
 53a:	df 91       	pop	r29
 53c:	cf 91       	pop	r28
 53e:	1f 91       	pop	r17
 540:	0f 91       	pop	r16
 542:	08 95       	ret

00000544 <vfprintf>:
 544:	2f 92       	push	r2
 546:	3f 92       	push	r3
 548:	4f 92       	push	r4
 54a:	5f 92       	push	r5
 54c:	6f 92       	push	r6
 54e:	7f 92       	push	r7
 550:	8f 92       	push	r8
 552:	9f 92       	push	r9
 554:	af 92       	push	r10
 556:	bf 92       	push	r11
 558:	cf 92       	push	r12
 55a:	df 92       	push	r13
 55c:	ef 92       	push	r14
 55e:	ff 92       	push	r15
 560:	0f 93       	push	r16
 562:	1f 93       	push	r17
 564:	cf 93       	push	r28
 566:	df 93       	push	r29
 568:	cd b7       	in	r28, 0x3d	; 61
 56a:	de b7       	in	r29, 0x3e	; 62
 56c:	2b 97       	sbiw	r28, 0x0b	; 11
 56e:	0f b6       	in	r0, 0x3f	; 63
 570:	f8 94       	cli
 572:	de bf       	out	0x3e, r29	; 62
 574:	0f be       	out	0x3f, r0	; 63
 576:	cd bf       	out	0x3d, r28	; 61
 578:	6c 01       	movw	r12, r24
 57a:	7b 01       	movw	r14, r22
 57c:	8a 01       	movw	r16, r20
 57e:	fc 01       	movw	r30, r24
 580:	17 82       	std	Z+7, r1	; 0x07
 582:	16 82       	std	Z+6, r1	; 0x06
 584:	83 81       	ldd	r24, Z+3	; 0x03
 586:	81 ff       	sbrs	r24, 1
 588:	bf c1       	rjmp	.+894    	; 0x908 <vfprintf+0x3c4>
 58a:	ce 01       	movw	r24, r28
 58c:	01 96       	adiw	r24, 0x01	; 1
 58e:	3c 01       	movw	r6, r24
 590:	f6 01       	movw	r30, r12
 592:	93 81       	ldd	r25, Z+3	; 0x03
 594:	f7 01       	movw	r30, r14
 596:	93 fd       	sbrc	r25, 3
 598:	85 91       	lpm	r24, Z+
 59a:	93 ff       	sbrs	r25, 3
 59c:	81 91       	ld	r24, Z+
 59e:	7f 01       	movw	r14, r30
 5a0:	88 23       	and	r24, r24
 5a2:	09 f4       	brne	.+2      	; 0x5a6 <vfprintf+0x62>
 5a4:	ad c1       	rjmp	.+858    	; 0x900 <vfprintf+0x3bc>
 5a6:	85 32       	cpi	r24, 0x25	; 37
 5a8:	39 f4       	brne	.+14     	; 0x5b8 <vfprintf+0x74>
 5aa:	93 fd       	sbrc	r25, 3
 5ac:	85 91       	lpm	r24, Z+
 5ae:	93 ff       	sbrs	r25, 3
 5b0:	81 91       	ld	r24, Z+
 5b2:	7f 01       	movw	r14, r30
 5b4:	85 32       	cpi	r24, 0x25	; 37
 5b6:	21 f4       	brne	.+8      	; 0x5c0 <vfprintf+0x7c>
 5b8:	b6 01       	movw	r22, r12
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	d6 d1       	rcall	.+940    	; 0x96a <fputc>
 5be:	e8 cf       	rjmp	.-48     	; 0x590 <vfprintf+0x4c>
 5c0:	91 2c       	mov	r9, r1
 5c2:	21 2c       	mov	r2, r1
 5c4:	31 2c       	mov	r3, r1
 5c6:	ff e1       	ldi	r31, 0x1F	; 31
 5c8:	f3 15       	cp	r31, r3
 5ca:	d8 f0       	brcs	.+54     	; 0x602 <vfprintf+0xbe>
 5cc:	8b 32       	cpi	r24, 0x2B	; 43
 5ce:	79 f0       	breq	.+30     	; 0x5ee <vfprintf+0xaa>
 5d0:	38 f4       	brcc	.+14     	; 0x5e0 <vfprintf+0x9c>
 5d2:	80 32       	cpi	r24, 0x20	; 32
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <vfprintf+0xb0>
 5d6:	83 32       	cpi	r24, 0x23	; 35
 5d8:	a1 f4       	brne	.+40     	; 0x602 <vfprintf+0xbe>
 5da:	23 2d       	mov	r18, r3
 5dc:	20 61       	ori	r18, 0x10	; 16
 5de:	1d c0       	rjmp	.+58     	; 0x61a <vfprintf+0xd6>
 5e0:	8d 32       	cpi	r24, 0x2D	; 45
 5e2:	61 f0       	breq	.+24     	; 0x5fc <vfprintf+0xb8>
 5e4:	80 33       	cpi	r24, 0x30	; 48
 5e6:	69 f4       	brne	.+26     	; 0x602 <vfprintf+0xbe>
 5e8:	23 2d       	mov	r18, r3
 5ea:	21 60       	ori	r18, 0x01	; 1
 5ec:	16 c0       	rjmp	.+44     	; 0x61a <vfprintf+0xd6>
 5ee:	83 2d       	mov	r24, r3
 5f0:	82 60       	ori	r24, 0x02	; 2
 5f2:	38 2e       	mov	r3, r24
 5f4:	e3 2d       	mov	r30, r3
 5f6:	e4 60       	ori	r30, 0x04	; 4
 5f8:	3e 2e       	mov	r3, r30
 5fa:	2a c0       	rjmp	.+84     	; 0x650 <vfprintf+0x10c>
 5fc:	f3 2d       	mov	r31, r3
 5fe:	f8 60       	ori	r31, 0x08	; 8
 600:	1d c0       	rjmp	.+58     	; 0x63c <vfprintf+0xf8>
 602:	37 fc       	sbrc	r3, 7
 604:	2d c0       	rjmp	.+90     	; 0x660 <vfprintf+0x11c>
 606:	20 ed       	ldi	r18, 0xD0	; 208
 608:	28 0f       	add	r18, r24
 60a:	2a 30       	cpi	r18, 0x0A	; 10
 60c:	40 f0       	brcs	.+16     	; 0x61e <vfprintf+0xda>
 60e:	8e 32       	cpi	r24, 0x2E	; 46
 610:	b9 f4       	brne	.+46     	; 0x640 <vfprintf+0xfc>
 612:	36 fc       	sbrc	r3, 6
 614:	75 c1       	rjmp	.+746    	; 0x900 <vfprintf+0x3bc>
 616:	23 2d       	mov	r18, r3
 618:	20 64       	ori	r18, 0x40	; 64
 61a:	32 2e       	mov	r3, r18
 61c:	19 c0       	rjmp	.+50     	; 0x650 <vfprintf+0x10c>
 61e:	36 fe       	sbrs	r3, 6
 620:	06 c0       	rjmp	.+12     	; 0x62e <vfprintf+0xea>
 622:	8a e0       	ldi	r24, 0x0A	; 10
 624:	98 9e       	mul	r9, r24
 626:	20 0d       	add	r18, r0
 628:	11 24       	eor	r1, r1
 62a:	92 2e       	mov	r9, r18
 62c:	11 c0       	rjmp	.+34     	; 0x650 <vfprintf+0x10c>
 62e:	ea e0       	ldi	r30, 0x0A	; 10
 630:	2e 9e       	mul	r2, r30
 632:	20 0d       	add	r18, r0
 634:	11 24       	eor	r1, r1
 636:	22 2e       	mov	r2, r18
 638:	f3 2d       	mov	r31, r3
 63a:	f0 62       	ori	r31, 0x20	; 32
 63c:	3f 2e       	mov	r3, r31
 63e:	08 c0       	rjmp	.+16     	; 0x650 <vfprintf+0x10c>
 640:	8c 36       	cpi	r24, 0x6C	; 108
 642:	21 f4       	brne	.+8      	; 0x64c <vfprintf+0x108>
 644:	83 2d       	mov	r24, r3
 646:	80 68       	ori	r24, 0x80	; 128
 648:	38 2e       	mov	r3, r24
 64a:	02 c0       	rjmp	.+4      	; 0x650 <vfprintf+0x10c>
 64c:	88 36       	cpi	r24, 0x68	; 104
 64e:	41 f4       	brne	.+16     	; 0x660 <vfprintf+0x11c>
 650:	f7 01       	movw	r30, r14
 652:	93 fd       	sbrc	r25, 3
 654:	85 91       	lpm	r24, Z+
 656:	93 ff       	sbrs	r25, 3
 658:	81 91       	ld	r24, Z+
 65a:	7f 01       	movw	r14, r30
 65c:	81 11       	cpse	r24, r1
 65e:	b3 cf       	rjmp	.-154    	; 0x5c6 <vfprintf+0x82>
 660:	98 2f       	mov	r25, r24
 662:	9f 7d       	andi	r25, 0xDF	; 223
 664:	95 54       	subi	r25, 0x45	; 69
 666:	93 30       	cpi	r25, 0x03	; 3
 668:	28 f4       	brcc	.+10     	; 0x674 <vfprintf+0x130>
 66a:	0c 5f       	subi	r16, 0xFC	; 252
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	9f e3       	ldi	r25, 0x3F	; 63
 670:	99 83       	std	Y+1, r25	; 0x01
 672:	0d c0       	rjmp	.+26     	; 0x68e <vfprintf+0x14a>
 674:	83 36       	cpi	r24, 0x63	; 99
 676:	31 f0       	breq	.+12     	; 0x684 <vfprintf+0x140>
 678:	83 37       	cpi	r24, 0x73	; 115
 67a:	71 f0       	breq	.+28     	; 0x698 <vfprintf+0x154>
 67c:	83 35       	cpi	r24, 0x53	; 83
 67e:	09 f0       	breq	.+2      	; 0x682 <vfprintf+0x13e>
 680:	55 c0       	rjmp	.+170    	; 0x72c <vfprintf+0x1e8>
 682:	20 c0       	rjmp	.+64     	; 0x6c4 <vfprintf+0x180>
 684:	f8 01       	movw	r30, r16
 686:	80 81       	ld	r24, Z
 688:	89 83       	std	Y+1, r24	; 0x01
 68a:	0e 5f       	subi	r16, 0xFE	; 254
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	88 24       	eor	r8, r8
 690:	83 94       	inc	r8
 692:	91 2c       	mov	r9, r1
 694:	53 01       	movw	r10, r6
 696:	12 c0       	rjmp	.+36     	; 0x6bc <vfprintf+0x178>
 698:	28 01       	movw	r4, r16
 69a:	f2 e0       	ldi	r31, 0x02	; 2
 69c:	4f 0e       	add	r4, r31
 69e:	51 1c       	adc	r5, r1
 6a0:	f8 01       	movw	r30, r16
 6a2:	a0 80       	ld	r10, Z
 6a4:	b1 80       	ldd	r11, Z+1	; 0x01
 6a6:	36 fe       	sbrs	r3, 6
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <vfprintf+0x16c>
 6aa:	69 2d       	mov	r22, r9
 6ac:	70 e0       	ldi	r23, 0x00	; 0
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <vfprintf+0x170>
 6b0:	6f ef       	ldi	r22, 0xFF	; 255
 6b2:	7f ef       	ldi	r23, 0xFF	; 255
 6b4:	c5 01       	movw	r24, r10
 6b6:	4e d1       	rcall	.+668    	; 0x954 <strnlen>
 6b8:	4c 01       	movw	r8, r24
 6ba:	82 01       	movw	r16, r4
 6bc:	f3 2d       	mov	r31, r3
 6be:	ff 77       	andi	r31, 0x7F	; 127
 6c0:	3f 2e       	mov	r3, r31
 6c2:	15 c0       	rjmp	.+42     	; 0x6ee <vfprintf+0x1aa>
 6c4:	28 01       	movw	r4, r16
 6c6:	22 e0       	ldi	r18, 0x02	; 2
 6c8:	42 0e       	add	r4, r18
 6ca:	51 1c       	adc	r5, r1
 6cc:	f8 01       	movw	r30, r16
 6ce:	a0 80       	ld	r10, Z
 6d0:	b1 80       	ldd	r11, Z+1	; 0x01
 6d2:	36 fe       	sbrs	r3, 6
 6d4:	03 c0       	rjmp	.+6      	; 0x6dc <vfprintf+0x198>
 6d6:	69 2d       	mov	r22, r9
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <vfprintf+0x19c>
 6dc:	6f ef       	ldi	r22, 0xFF	; 255
 6de:	7f ef       	ldi	r23, 0xFF	; 255
 6e0:	c5 01       	movw	r24, r10
 6e2:	2d d1       	rcall	.+602    	; 0x93e <strnlen_P>
 6e4:	4c 01       	movw	r8, r24
 6e6:	f3 2d       	mov	r31, r3
 6e8:	f0 68       	ori	r31, 0x80	; 128
 6ea:	3f 2e       	mov	r3, r31
 6ec:	82 01       	movw	r16, r4
 6ee:	33 fc       	sbrc	r3, 3
 6f0:	19 c0       	rjmp	.+50     	; 0x724 <vfprintf+0x1e0>
 6f2:	82 2d       	mov	r24, r2
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	88 16       	cp	r8, r24
 6f8:	99 06       	cpc	r9, r25
 6fa:	a0 f4       	brcc	.+40     	; 0x724 <vfprintf+0x1e0>
 6fc:	b6 01       	movw	r22, r12
 6fe:	80 e2       	ldi	r24, 0x20	; 32
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	33 d1       	rcall	.+614    	; 0x96a <fputc>
 704:	2a 94       	dec	r2
 706:	f5 cf       	rjmp	.-22     	; 0x6f2 <vfprintf+0x1ae>
 708:	f5 01       	movw	r30, r10
 70a:	37 fc       	sbrc	r3, 7
 70c:	85 91       	lpm	r24, Z+
 70e:	37 fe       	sbrs	r3, 7
 710:	81 91       	ld	r24, Z+
 712:	5f 01       	movw	r10, r30
 714:	b6 01       	movw	r22, r12
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	28 d1       	rcall	.+592    	; 0x96a <fputc>
 71a:	21 10       	cpse	r2, r1
 71c:	2a 94       	dec	r2
 71e:	21 e0       	ldi	r18, 0x01	; 1
 720:	82 1a       	sub	r8, r18
 722:	91 08       	sbc	r9, r1
 724:	81 14       	cp	r8, r1
 726:	91 04       	cpc	r9, r1
 728:	79 f7       	brne	.-34     	; 0x708 <vfprintf+0x1c4>
 72a:	e1 c0       	rjmp	.+450    	; 0x8ee <vfprintf+0x3aa>
 72c:	84 36       	cpi	r24, 0x64	; 100
 72e:	11 f0       	breq	.+4      	; 0x734 <vfprintf+0x1f0>
 730:	89 36       	cpi	r24, 0x69	; 105
 732:	39 f5       	brne	.+78     	; 0x782 <vfprintf+0x23e>
 734:	f8 01       	movw	r30, r16
 736:	37 fe       	sbrs	r3, 7
 738:	07 c0       	rjmp	.+14     	; 0x748 <vfprintf+0x204>
 73a:	60 81       	ld	r22, Z
 73c:	71 81       	ldd	r23, Z+1	; 0x01
 73e:	82 81       	ldd	r24, Z+2	; 0x02
 740:	93 81       	ldd	r25, Z+3	; 0x03
 742:	0c 5f       	subi	r16, 0xFC	; 252
 744:	1f 4f       	sbci	r17, 0xFF	; 255
 746:	08 c0       	rjmp	.+16     	; 0x758 <vfprintf+0x214>
 748:	60 81       	ld	r22, Z
 74a:	71 81       	ldd	r23, Z+1	; 0x01
 74c:	07 2e       	mov	r0, r23
 74e:	00 0c       	add	r0, r0
 750:	88 0b       	sbc	r24, r24
 752:	99 0b       	sbc	r25, r25
 754:	0e 5f       	subi	r16, 0xFE	; 254
 756:	1f 4f       	sbci	r17, 0xFF	; 255
 758:	f3 2d       	mov	r31, r3
 75a:	ff 76       	andi	r31, 0x6F	; 111
 75c:	3f 2e       	mov	r3, r31
 75e:	97 ff       	sbrs	r25, 7
 760:	09 c0       	rjmp	.+18     	; 0x774 <vfprintf+0x230>
 762:	90 95       	com	r25
 764:	80 95       	com	r24
 766:	70 95       	com	r23
 768:	61 95       	neg	r22
 76a:	7f 4f       	sbci	r23, 0xFF	; 255
 76c:	8f 4f       	sbci	r24, 0xFF	; 255
 76e:	9f 4f       	sbci	r25, 0xFF	; 255
 770:	f0 68       	ori	r31, 0x80	; 128
 772:	3f 2e       	mov	r3, r31
 774:	2a e0       	ldi	r18, 0x0A	; 10
 776:	30 e0       	ldi	r19, 0x00	; 0
 778:	a3 01       	movw	r20, r6
 77a:	33 d1       	rcall	.+614    	; 0x9e2 <__ultoa_invert>
 77c:	88 2e       	mov	r8, r24
 77e:	86 18       	sub	r8, r6
 780:	44 c0       	rjmp	.+136    	; 0x80a <vfprintf+0x2c6>
 782:	85 37       	cpi	r24, 0x75	; 117
 784:	31 f4       	brne	.+12     	; 0x792 <vfprintf+0x24e>
 786:	23 2d       	mov	r18, r3
 788:	2f 7e       	andi	r18, 0xEF	; 239
 78a:	b2 2e       	mov	r11, r18
 78c:	2a e0       	ldi	r18, 0x0A	; 10
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	25 c0       	rjmp	.+74     	; 0x7dc <vfprintf+0x298>
 792:	93 2d       	mov	r25, r3
 794:	99 7f       	andi	r25, 0xF9	; 249
 796:	b9 2e       	mov	r11, r25
 798:	8f 36       	cpi	r24, 0x6F	; 111
 79a:	c1 f0       	breq	.+48     	; 0x7cc <vfprintf+0x288>
 79c:	18 f4       	brcc	.+6      	; 0x7a4 <vfprintf+0x260>
 79e:	88 35       	cpi	r24, 0x58	; 88
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <vfprintf+0x27c>
 7a2:	ae c0       	rjmp	.+348    	; 0x900 <vfprintf+0x3bc>
 7a4:	80 37       	cpi	r24, 0x70	; 112
 7a6:	19 f0       	breq	.+6      	; 0x7ae <vfprintf+0x26a>
 7a8:	88 37       	cpi	r24, 0x78	; 120
 7aa:	21 f0       	breq	.+8      	; 0x7b4 <vfprintf+0x270>
 7ac:	a9 c0       	rjmp	.+338    	; 0x900 <vfprintf+0x3bc>
 7ae:	e9 2f       	mov	r30, r25
 7b0:	e0 61       	ori	r30, 0x10	; 16
 7b2:	be 2e       	mov	r11, r30
 7b4:	b4 fe       	sbrs	r11, 4
 7b6:	0d c0       	rjmp	.+26     	; 0x7d2 <vfprintf+0x28e>
 7b8:	fb 2d       	mov	r31, r11
 7ba:	f4 60       	ori	r31, 0x04	; 4
 7bc:	bf 2e       	mov	r11, r31
 7be:	09 c0       	rjmp	.+18     	; 0x7d2 <vfprintf+0x28e>
 7c0:	34 fe       	sbrs	r3, 4
 7c2:	0a c0       	rjmp	.+20     	; 0x7d8 <vfprintf+0x294>
 7c4:	29 2f       	mov	r18, r25
 7c6:	26 60       	ori	r18, 0x06	; 6
 7c8:	b2 2e       	mov	r11, r18
 7ca:	06 c0       	rjmp	.+12     	; 0x7d8 <vfprintf+0x294>
 7cc:	28 e0       	ldi	r18, 0x08	; 8
 7ce:	30 e0       	ldi	r19, 0x00	; 0
 7d0:	05 c0       	rjmp	.+10     	; 0x7dc <vfprintf+0x298>
 7d2:	20 e1       	ldi	r18, 0x10	; 16
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <vfprintf+0x298>
 7d8:	20 e1       	ldi	r18, 0x10	; 16
 7da:	32 e0       	ldi	r19, 0x02	; 2
 7dc:	f8 01       	movw	r30, r16
 7de:	b7 fe       	sbrs	r11, 7
 7e0:	07 c0       	rjmp	.+14     	; 0x7f0 <vfprintf+0x2ac>
 7e2:	60 81       	ld	r22, Z
 7e4:	71 81       	ldd	r23, Z+1	; 0x01
 7e6:	82 81       	ldd	r24, Z+2	; 0x02
 7e8:	93 81       	ldd	r25, Z+3	; 0x03
 7ea:	0c 5f       	subi	r16, 0xFC	; 252
 7ec:	1f 4f       	sbci	r17, 0xFF	; 255
 7ee:	06 c0       	rjmp	.+12     	; 0x7fc <vfprintf+0x2b8>
 7f0:	60 81       	ld	r22, Z
 7f2:	71 81       	ldd	r23, Z+1	; 0x01
 7f4:	80 e0       	ldi	r24, 0x00	; 0
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	0e 5f       	subi	r16, 0xFE	; 254
 7fa:	1f 4f       	sbci	r17, 0xFF	; 255
 7fc:	a3 01       	movw	r20, r6
 7fe:	f1 d0       	rcall	.+482    	; 0x9e2 <__ultoa_invert>
 800:	88 2e       	mov	r8, r24
 802:	86 18       	sub	r8, r6
 804:	fb 2d       	mov	r31, r11
 806:	ff 77       	andi	r31, 0x7F	; 127
 808:	3f 2e       	mov	r3, r31
 80a:	36 fe       	sbrs	r3, 6
 80c:	0d c0       	rjmp	.+26     	; 0x828 <vfprintf+0x2e4>
 80e:	23 2d       	mov	r18, r3
 810:	2e 7f       	andi	r18, 0xFE	; 254
 812:	a2 2e       	mov	r10, r18
 814:	89 14       	cp	r8, r9
 816:	58 f4       	brcc	.+22     	; 0x82e <vfprintf+0x2ea>
 818:	34 fe       	sbrs	r3, 4
 81a:	0b c0       	rjmp	.+22     	; 0x832 <vfprintf+0x2ee>
 81c:	32 fc       	sbrc	r3, 2
 81e:	09 c0       	rjmp	.+18     	; 0x832 <vfprintf+0x2ee>
 820:	83 2d       	mov	r24, r3
 822:	8e 7e       	andi	r24, 0xEE	; 238
 824:	a8 2e       	mov	r10, r24
 826:	05 c0       	rjmp	.+10     	; 0x832 <vfprintf+0x2ee>
 828:	b8 2c       	mov	r11, r8
 82a:	a3 2c       	mov	r10, r3
 82c:	03 c0       	rjmp	.+6      	; 0x834 <vfprintf+0x2f0>
 82e:	b8 2c       	mov	r11, r8
 830:	01 c0       	rjmp	.+2      	; 0x834 <vfprintf+0x2f0>
 832:	b9 2c       	mov	r11, r9
 834:	a4 fe       	sbrs	r10, 4
 836:	0f c0       	rjmp	.+30     	; 0x856 <vfprintf+0x312>
 838:	fe 01       	movw	r30, r28
 83a:	e8 0d       	add	r30, r8
 83c:	f1 1d       	adc	r31, r1
 83e:	80 81       	ld	r24, Z
 840:	80 33       	cpi	r24, 0x30	; 48
 842:	21 f4       	brne	.+8      	; 0x84c <vfprintf+0x308>
 844:	9a 2d       	mov	r25, r10
 846:	99 7e       	andi	r25, 0xE9	; 233
 848:	a9 2e       	mov	r10, r25
 84a:	09 c0       	rjmp	.+18     	; 0x85e <vfprintf+0x31a>
 84c:	a2 fe       	sbrs	r10, 2
 84e:	06 c0       	rjmp	.+12     	; 0x85c <vfprintf+0x318>
 850:	b3 94       	inc	r11
 852:	b3 94       	inc	r11
 854:	04 c0       	rjmp	.+8      	; 0x85e <vfprintf+0x31a>
 856:	8a 2d       	mov	r24, r10
 858:	86 78       	andi	r24, 0x86	; 134
 85a:	09 f0       	breq	.+2      	; 0x85e <vfprintf+0x31a>
 85c:	b3 94       	inc	r11
 85e:	a3 fc       	sbrc	r10, 3
 860:	10 c0       	rjmp	.+32     	; 0x882 <vfprintf+0x33e>
 862:	a0 fe       	sbrs	r10, 0
 864:	06 c0       	rjmp	.+12     	; 0x872 <vfprintf+0x32e>
 866:	b2 14       	cp	r11, r2
 868:	80 f4       	brcc	.+32     	; 0x88a <vfprintf+0x346>
 86a:	28 0c       	add	r2, r8
 86c:	92 2c       	mov	r9, r2
 86e:	9b 18       	sub	r9, r11
 870:	0d c0       	rjmp	.+26     	; 0x88c <vfprintf+0x348>
 872:	b2 14       	cp	r11, r2
 874:	58 f4       	brcc	.+22     	; 0x88c <vfprintf+0x348>
 876:	b6 01       	movw	r22, r12
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	76 d0       	rcall	.+236    	; 0x96a <fputc>
 87e:	b3 94       	inc	r11
 880:	f8 cf       	rjmp	.-16     	; 0x872 <vfprintf+0x32e>
 882:	b2 14       	cp	r11, r2
 884:	18 f4       	brcc	.+6      	; 0x88c <vfprintf+0x348>
 886:	2b 18       	sub	r2, r11
 888:	02 c0       	rjmp	.+4      	; 0x88e <vfprintf+0x34a>
 88a:	98 2c       	mov	r9, r8
 88c:	21 2c       	mov	r2, r1
 88e:	a4 fe       	sbrs	r10, 4
 890:	0f c0       	rjmp	.+30     	; 0x8b0 <vfprintf+0x36c>
 892:	b6 01       	movw	r22, r12
 894:	80 e3       	ldi	r24, 0x30	; 48
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	68 d0       	rcall	.+208    	; 0x96a <fputc>
 89a:	a2 fe       	sbrs	r10, 2
 89c:	16 c0       	rjmp	.+44     	; 0x8ca <vfprintf+0x386>
 89e:	a1 fc       	sbrc	r10, 1
 8a0:	03 c0       	rjmp	.+6      	; 0x8a8 <vfprintf+0x364>
 8a2:	88 e7       	ldi	r24, 0x78	; 120
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	02 c0       	rjmp	.+4      	; 0x8ac <vfprintf+0x368>
 8a8:	88 e5       	ldi	r24, 0x58	; 88
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	b6 01       	movw	r22, r12
 8ae:	0c c0       	rjmp	.+24     	; 0x8c8 <vfprintf+0x384>
 8b0:	8a 2d       	mov	r24, r10
 8b2:	86 78       	andi	r24, 0x86	; 134
 8b4:	51 f0       	breq	.+20     	; 0x8ca <vfprintf+0x386>
 8b6:	a1 fe       	sbrs	r10, 1
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <vfprintf+0x37a>
 8ba:	8b e2       	ldi	r24, 0x2B	; 43
 8bc:	01 c0       	rjmp	.+2      	; 0x8c0 <vfprintf+0x37c>
 8be:	80 e2       	ldi	r24, 0x20	; 32
 8c0:	a7 fc       	sbrc	r10, 7
 8c2:	8d e2       	ldi	r24, 0x2D	; 45
 8c4:	b6 01       	movw	r22, r12
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	50 d0       	rcall	.+160    	; 0x96a <fputc>
 8ca:	89 14       	cp	r8, r9
 8cc:	30 f4       	brcc	.+12     	; 0x8da <vfprintf+0x396>
 8ce:	b6 01       	movw	r22, r12
 8d0:	80 e3       	ldi	r24, 0x30	; 48
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	4a d0       	rcall	.+148    	; 0x96a <fputc>
 8d6:	9a 94       	dec	r9
 8d8:	f8 cf       	rjmp	.-16     	; 0x8ca <vfprintf+0x386>
 8da:	8a 94       	dec	r8
 8dc:	f3 01       	movw	r30, r6
 8de:	e8 0d       	add	r30, r8
 8e0:	f1 1d       	adc	r31, r1
 8e2:	80 81       	ld	r24, Z
 8e4:	b6 01       	movw	r22, r12
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	40 d0       	rcall	.+128    	; 0x96a <fputc>
 8ea:	81 10       	cpse	r8, r1
 8ec:	f6 cf       	rjmp	.-20     	; 0x8da <vfprintf+0x396>
 8ee:	22 20       	and	r2, r2
 8f0:	09 f4       	brne	.+2      	; 0x8f4 <vfprintf+0x3b0>
 8f2:	4e ce       	rjmp	.-868    	; 0x590 <vfprintf+0x4c>
 8f4:	b6 01       	movw	r22, r12
 8f6:	80 e2       	ldi	r24, 0x20	; 32
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	37 d0       	rcall	.+110    	; 0x96a <fputc>
 8fc:	2a 94       	dec	r2
 8fe:	f7 cf       	rjmp	.-18     	; 0x8ee <vfprintf+0x3aa>
 900:	f6 01       	movw	r30, r12
 902:	86 81       	ldd	r24, Z+6	; 0x06
 904:	97 81       	ldd	r25, Z+7	; 0x07
 906:	02 c0       	rjmp	.+4      	; 0x90c <vfprintf+0x3c8>
 908:	8f ef       	ldi	r24, 0xFF	; 255
 90a:	9f ef       	ldi	r25, 0xFF	; 255
 90c:	2b 96       	adiw	r28, 0x0b	; 11
 90e:	0f b6       	in	r0, 0x3f	; 63
 910:	f8 94       	cli
 912:	de bf       	out	0x3e, r29	; 62
 914:	0f be       	out	0x3f, r0	; 63
 916:	cd bf       	out	0x3d, r28	; 61
 918:	df 91       	pop	r29
 91a:	cf 91       	pop	r28
 91c:	1f 91       	pop	r17
 91e:	0f 91       	pop	r16
 920:	ff 90       	pop	r15
 922:	ef 90       	pop	r14
 924:	df 90       	pop	r13
 926:	cf 90       	pop	r12
 928:	bf 90       	pop	r11
 92a:	af 90       	pop	r10
 92c:	9f 90       	pop	r9
 92e:	8f 90       	pop	r8
 930:	7f 90       	pop	r7
 932:	6f 90       	pop	r6
 934:	5f 90       	pop	r5
 936:	4f 90       	pop	r4
 938:	3f 90       	pop	r3
 93a:	2f 90       	pop	r2
 93c:	08 95       	ret

0000093e <strnlen_P>:
 93e:	fc 01       	movw	r30, r24
 940:	05 90       	lpm	r0, Z+
 942:	61 50       	subi	r22, 0x01	; 1
 944:	70 40       	sbci	r23, 0x00	; 0
 946:	01 10       	cpse	r0, r1
 948:	d8 f7       	brcc	.-10     	; 0x940 <strnlen_P+0x2>
 94a:	80 95       	com	r24
 94c:	90 95       	com	r25
 94e:	8e 0f       	add	r24, r30
 950:	9f 1f       	adc	r25, r31
 952:	08 95       	ret

00000954 <strnlen>:
 954:	fc 01       	movw	r30, r24
 956:	61 50       	subi	r22, 0x01	; 1
 958:	70 40       	sbci	r23, 0x00	; 0
 95a:	01 90       	ld	r0, Z+
 95c:	01 10       	cpse	r0, r1
 95e:	d8 f7       	brcc	.-10     	; 0x956 <strnlen+0x2>
 960:	80 95       	com	r24
 962:	90 95       	com	r25
 964:	8e 0f       	add	r24, r30
 966:	9f 1f       	adc	r25, r31
 968:	08 95       	ret

0000096a <fputc>:
 96a:	0f 93       	push	r16
 96c:	1f 93       	push	r17
 96e:	cf 93       	push	r28
 970:	df 93       	push	r29
 972:	fb 01       	movw	r30, r22
 974:	23 81       	ldd	r18, Z+3	; 0x03
 976:	21 fd       	sbrc	r18, 1
 978:	03 c0       	rjmp	.+6      	; 0x980 <fputc+0x16>
 97a:	8f ef       	ldi	r24, 0xFF	; 255
 97c:	9f ef       	ldi	r25, 0xFF	; 255
 97e:	2c c0       	rjmp	.+88     	; 0x9d8 <fputc+0x6e>
 980:	22 ff       	sbrs	r18, 2
 982:	16 c0       	rjmp	.+44     	; 0x9b0 <fputc+0x46>
 984:	46 81       	ldd	r20, Z+6	; 0x06
 986:	57 81       	ldd	r21, Z+7	; 0x07
 988:	24 81       	ldd	r18, Z+4	; 0x04
 98a:	35 81       	ldd	r19, Z+5	; 0x05
 98c:	42 17       	cp	r20, r18
 98e:	53 07       	cpc	r21, r19
 990:	44 f4       	brge	.+16     	; 0x9a2 <fputc+0x38>
 992:	a0 81       	ld	r26, Z
 994:	b1 81       	ldd	r27, Z+1	; 0x01
 996:	9d 01       	movw	r18, r26
 998:	2f 5f       	subi	r18, 0xFF	; 255
 99a:	3f 4f       	sbci	r19, 0xFF	; 255
 99c:	31 83       	std	Z+1, r19	; 0x01
 99e:	20 83       	st	Z, r18
 9a0:	8c 93       	st	X, r24
 9a2:	26 81       	ldd	r18, Z+6	; 0x06
 9a4:	37 81       	ldd	r19, Z+7	; 0x07
 9a6:	2f 5f       	subi	r18, 0xFF	; 255
 9a8:	3f 4f       	sbci	r19, 0xFF	; 255
 9aa:	37 83       	std	Z+7, r19	; 0x07
 9ac:	26 83       	std	Z+6, r18	; 0x06
 9ae:	14 c0       	rjmp	.+40     	; 0x9d8 <fputc+0x6e>
 9b0:	8b 01       	movw	r16, r22
 9b2:	ec 01       	movw	r28, r24
 9b4:	fb 01       	movw	r30, r22
 9b6:	00 84       	ldd	r0, Z+8	; 0x08
 9b8:	f1 85       	ldd	r31, Z+9	; 0x09
 9ba:	e0 2d       	mov	r30, r0
 9bc:	09 95       	icall
 9be:	89 2b       	or	r24, r25
 9c0:	e1 f6       	brne	.-72     	; 0x97a <fputc+0x10>
 9c2:	d8 01       	movw	r26, r16
 9c4:	16 96       	adiw	r26, 0x06	; 6
 9c6:	8d 91       	ld	r24, X+
 9c8:	9c 91       	ld	r25, X
 9ca:	17 97       	sbiw	r26, 0x07	; 7
 9cc:	01 96       	adiw	r24, 0x01	; 1
 9ce:	17 96       	adiw	r26, 0x07	; 7
 9d0:	9c 93       	st	X, r25
 9d2:	8e 93       	st	-X, r24
 9d4:	16 97       	sbiw	r26, 0x06	; 6
 9d6:	ce 01       	movw	r24, r28
 9d8:	df 91       	pop	r29
 9da:	cf 91       	pop	r28
 9dc:	1f 91       	pop	r17
 9de:	0f 91       	pop	r16
 9e0:	08 95       	ret

000009e2 <__ultoa_invert>:
 9e2:	fa 01       	movw	r30, r20
 9e4:	aa 27       	eor	r26, r26
 9e6:	28 30       	cpi	r18, 0x08	; 8
 9e8:	51 f1       	breq	.+84     	; 0xa3e <__ultoa_invert+0x5c>
 9ea:	20 31       	cpi	r18, 0x10	; 16
 9ec:	81 f1       	breq	.+96     	; 0xa4e <__ultoa_invert+0x6c>
 9ee:	e8 94       	clt
 9f0:	6f 93       	push	r22
 9f2:	6e 7f       	andi	r22, 0xFE	; 254
 9f4:	6e 5f       	subi	r22, 0xFE	; 254
 9f6:	7f 4f       	sbci	r23, 0xFF	; 255
 9f8:	8f 4f       	sbci	r24, 0xFF	; 255
 9fa:	9f 4f       	sbci	r25, 0xFF	; 255
 9fc:	af 4f       	sbci	r26, 0xFF	; 255
 9fe:	b1 e0       	ldi	r27, 0x01	; 1
 a00:	3e d0       	rcall	.+124    	; 0xa7e <__ultoa_invert+0x9c>
 a02:	b4 e0       	ldi	r27, 0x04	; 4
 a04:	3c d0       	rcall	.+120    	; 0xa7e <__ultoa_invert+0x9c>
 a06:	67 0f       	add	r22, r23
 a08:	78 1f       	adc	r23, r24
 a0a:	89 1f       	adc	r24, r25
 a0c:	9a 1f       	adc	r25, r26
 a0e:	a1 1d       	adc	r26, r1
 a10:	68 0f       	add	r22, r24
 a12:	79 1f       	adc	r23, r25
 a14:	8a 1f       	adc	r24, r26
 a16:	91 1d       	adc	r25, r1
 a18:	a1 1d       	adc	r26, r1
 a1a:	6a 0f       	add	r22, r26
 a1c:	71 1d       	adc	r23, r1
 a1e:	81 1d       	adc	r24, r1
 a20:	91 1d       	adc	r25, r1
 a22:	a1 1d       	adc	r26, r1
 a24:	20 d0       	rcall	.+64     	; 0xa66 <__ultoa_invert+0x84>
 a26:	09 f4       	brne	.+2      	; 0xa2a <__ultoa_invert+0x48>
 a28:	68 94       	set
 a2a:	3f 91       	pop	r19
 a2c:	2a e0       	ldi	r18, 0x0A	; 10
 a2e:	26 9f       	mul	r18, r22
 a30:	11 24       	eor	r1, r1
 a32:	30 19       	sub	r19, r0
 a34:	30 5d       	subi	r19, 0xD0	; 208
 a36:	31 93       	st	Z+, r19
 a38:	de f6       	brtc	.-74     	; 0x9f0 <__ultoa_invert+0xe>
 a3a:	cf 01       	movw	r24, r30
 a3c:	08 95       	ret
 a3e:	46 2f       	mov	r20, r22
 a40:	47 70       	andi	r20, 0x07	; 7
 a42:	40 5d       	subi	r20, 0xD0	; 208
 a44:	41 93       	st	Z+, r20
 a46:	b3 e0       	ldi	r27, 0x03	; 3
 a48:	0f d0       	rcall	.+30     	; 0xa68 <__ultoa_invert+0x86>
 a4a:	c9 f7       	brne	.-14     	; 0xa3e <__ultoa_invert+0x5c>
 a4c:	f6 cf       	rjmp	.-20     	; 0xa3a <__ultoa_invert+0x58>
 a4e:	46 2f       	mov	r20, r22
 a50:	4f 70       	andi	r20, 0x0F	; 15
 a52:	40 5d       	subi	r20, 0xD0	; 208
 a54:	4a 33       	cpi	r20, 0x3A	; 58
 a56:	18 f0       	brcs	.+6      	; 0xa5e <__ultoa_invert+0x7c>
 a58:	49 5d       	subi	r20, 0xD9	; 217
 a5a:	31 fd       	sbrc	r19, 1
 a5c:	40 52       	subi	r20, 0x20	; 32
 a5e:	41 93       	st	Z+, r20
 a60:	02 d0       	rcall	.+4      	; 0xa66 <__ultoa_invert+0x84>
 a62:	a9 f7       	brne	.-22     	; 0xa4e <__ultoa_invert+0x6c>
 a64:	ea cf       	rjmp	.-44     	; 0xa3a <__ultoa_invert+0x58>
 a66:	b4 e0       	ldi	r27, 0x04	; 4
 a68:	a6 95       	lsr	r26
 a6a:	97 95       	ror	r25
 a6c:	87 95       	ror	r24
 a6e:	77 95       	ror	r23
 a70:	67 95       	ror	r22
 a72:	ba 95       	dec	r27
 a74:	c9 f7       	brne	.-14     	; 0xa68 <__ultoa_invert+0x86>
 a76:	00 97       	sbiw	r24, 0x00	; 0
 a78:	61 05       	cpc	r22, r1
 a7a:	71 05       	cpc	r23, r1
 a7c:	08 95       	ret
 a7e:	9b 01       	movw	r18, r22
 a80:	ac 01       	movw	r20, r24
 a82:	0a 2e       	mov	r0, r26
 a84:	06 94       	lsr	r0
 a86:	57 95       	ror	r21
 a88:	47 95       	ror	r20
 a8a:	37 95       	ror	r19
 a8c:	27 95       	ror	r18
 a8e:	ba 95       	dec	r27
 a90:	c9 f7       	brne	.-14     	; 0xa84 <__ultoa_invert+0xa2>
 a92:	62 0f       	add	r22, r18
 a94:	73 1f       	adc	r23, r19
 a96:	84 1f       	adc	r24, r20
 a98:	95 1f       	adc	r25, r21
 a9a:	a0 1d       	adc	r26, r0
 a9c:	08 95       	ret

00000a9e <_exit>:
 a9e:	f8 94       	cli

00000aa0 <__stop_program>:
 aa0:	ff cf       	rjmp	.-2      	; 0xaa0 <__stop_program>
